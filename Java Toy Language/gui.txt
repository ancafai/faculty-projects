Program 1:
Execution Stack: 
v = 0
{while(v<3){Fork({print(v); v = v+1}); v = v+1}; {sleep( 5 ); print(v*10)}}

Symbols Table: 

Output: 

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
{while(v<3){Fork({print(v); v = v+1}); v = v+1}; {sleep( 5 ); print(v*10)}}

Symbols Table: 
v = 0

Output: 

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
while(v<3){Fork({print(v); v = v+1}); v = v+1}
{sleep( 5 ); print(v*10)}

Symbols Table: 
v = 0

Output: 

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
{Fork({print(v); v = v+1}); v = v+1}
while(v<3){Fork({print(v); v = v+1}); v = v+1}
{sleep( 5 ); print(v*10)}

Symbols Table: 
v = 0

Output: 

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
Fork({print(v); v = v+1})
v = v+1
while(v<3){Fork({print(v); v = v+1}); v = v+1}
{sleep( 5 ); print(v*10)}

Symbols Table: 
v = 0

Output: 

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
v = v+1
while(v<3){Fork({print(v); v = v+1}); v = v+1}
{sleep( 5 ); print(v*10)}

Symbols Table: 
v = 0

Output: 

FileTable: 

Heap: 
-------
Program 2:
Execution Stack: 
{print(v); v = v+1}

Symbols Table: 
v = 0

Output: 

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
while(v<3){Fork({print(v); v = v+1}); v = v+1}
{sleep( 5 ); print(v*10)}

Symbols Table: 
v = 1

Output: 

FileTable: 

Heap: 
-------
Program 2:
Execution Stack: 
print(v)
v = v+1

Symbols Table: 
v = 0

Output: 

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
{Fork({print(v); v = v+1}); v = v+1}
while(v<3){Fork({print(v); v = v+1}); v = v+1}
{sleep( 5 ); print(v*10)}

Symbols Table: 
v = 1

Output: 
0

FileTable: 

Heap: 
-------
Program 2:
Execution Stack: 
v = v+1

Symbols Table: 
v = 0

Output: 
0

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
Fork({print(v); v = v+1})
v = v+1
while(v<3){Fork({print(v); v = v+1}); v = v+1}
{sleep( 5 ); print(v*10)}

Symbols Table: 
v = 1

Output: 
0

FileTable: 

Heap: 
-------
Program 2:
Execution Stack: 

Symbols Table: 
v = 1

Output: 
0

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
v = v+1
while(v<3){Fork({print(v); v = v+1}); v = v+1}
{sleep( 5 ); print(v*10)}

Symbols Table: 
v = 1

Output: 
0

FileTable: 

Heap: 
-------
Program 3:
Execution Stack: 
{print(v); v = v+1}

Symbols Table: 
v = 1

Output: 
0

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
while(v<3){Fork({print(v); v = v+1}); v = v+1}
{sleep( 5 ); print(v*10)}

Symbols Table: 
v = 2

Output: 
0

FileTable: 

Heap: 
-------
Program 3:
Execution Stack: 
print(v)
v = v+1

Symbols Table: 
v = 1

Output: 
0

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
{Fork({print(v); v = v+1}); v = v+1}
while(v<3){Fork({print(v); v = v+1}); v = v+1}
{sleep( 5 ); print(v*10)}

Symbols Table: 
v = 2

Output: 
0
1

FileTable: 

Heap: 
-------
Program 3:
Execution Stack: 
v = v+1

Symbols Table: 
v = 1

Output: 
0
1

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
Fork({print(v); v = v+1})
v = v+1
while(v<3){Fork({print(v); v = v+1}); v = v+1}
{sleep( 5 ); print(v*10)}

Symbols Table: 
v = 2

Output: 
0
1

FileTable: 

Heap: 
-------
Program 3:
Execution Stack: 

Symbols Table: 
v = 2

Output: 
0
1

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
v = v+1
while(v<3){Fork({print(v); v = v+1}); v = v+1}
{sleep( 5 ); print(v*10)}

Symbols Table: 
v = 2

Output: 
0
1

FileTable: 

Heap: 
-------
Program 4:
Execution Stack: 
{print(v); v = v+1}

Symbols Table: 
v = 2

Output: 
0
1

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
while(v<3){Fork({print(v); v = v+1}); v = v+1}
{sleep( 5 ); print(v*10)}

Symbols Table: 
v = 3

Output: 
0
1

FileTable: 

Heap: 
-------
Program 4:
Execution Stack: 
print(v)
v = v+1

Symbols Table: 
v = 2

Output: 
0
1

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
{sleep( 5 ); print(v*10)}

Symbols Table: 
v = 3

Output: 
0
1
2

FileTable: 

Heap: 
-------
Program 4:
Execution Stack: 
v = v+1

Symbols Table: 
v = 2

Output: 
0
1
2

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
sleep( 5 )
print(v*10)

Symbols Table: 
v = 3

Output: 
0
1
2

FileTable: 

Heap: 
-------
Program 4:
Execution Stack: 

Symbols Table: 
v = 3

Output: 
0
1
2

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
sleep( 4 )
print(v*10)

Symbols Table: 
v = 3

Output: 
0
1
2

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
sleep( 3 )
print(v*10)

Symbols Table: 
v = 3

Output: 
0
1
2

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
sleep( 2 )
print(v*10)

Symbols Table: 
v = 3

Output: 
0
1
2

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
sleep( 1 )
print(v*10)

Symbols Table: 
v = 3

Output: 
0
1
2

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
sleep( 0 )
print(v*10)

Symbols Table: 
v = 3

Output: 
0
1
2

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
print(v*10)

Symbols Table: 
v = 3

Output: 
0
1
2

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 

Symbols Table: 
v = 3

Output: 
0
1
2
30

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
v = 0
{while(v<3){Fork({print(v); v = v+1}); v = v+1}; {sleep( 15 ); print(v*10)}}

Symbols Table: 

Output: 

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
{while(v<3){Fork({print(v); v = v+1}); v = v+1}; {sleep( 15 ); print(v*10)}}

Symbols Table: 
v = 0

Output: 

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
while(v<3){Fork({print(v); v = v+1}); v = v+1}
{sleep( 15 ); print(v*10)}

Symbols Table: 
v = 0

Output: 

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
{Fork({print(v); v = v+1}); v = v+1}
while(v<3){Fork({print(v); v = v+1}); v = v+1}
{sleep( 15 ); print(v*10)}

Symbols Table: 
v = 0

Output: 

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
Fork({print(v); v = v+1})
v = v+1
while(v<3){Fork({print(v); v = v+1}); v = v+1}
{sleep( 15 ); print(v*10)}

Symbols Table: 
v = 0

Output: 

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
v = v+1
while(v<3){Fork({print(v); v = v+1}); v = v+1}
{sleep( 15 ); print(v*10)}

Symbols Table: 
v = 0

Output: 

FileTable: 

Heap: 
-------
Program 2:
Execution Stack: 
{print(v); v = v+1}

Symbols Table: 
v = 0

Output: 

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
while(v<3){Fork({print(v); v = v+1}); v = v+1}
{sleep( 15 ); print(v*10)}

Symbols Table: 
v = 1

Output: 

FileTable: 

Heap: 
-------
Program 2:
Execution Stack: 
print(v)
v = v+1

Symbols Table: 
v = 0

Output: 

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
{Fork({print(v); v = v+1}); v = v+1}
while(v<3){Fork({print(v); v = v+1}); v = v+1}
{sleep( 15 ); print(v*10)}

Symbols Table: 
v = 1

Output: 
0

FileTable: 

Heap: 
-------
Program 2:
Execution Stack: 
v = v+1

Symbols Table: 
v = 0

Output: 
0

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
Fork({print(v); v = v+1})
v = v+1
while(v<3){Fork({print(v); v = v+1}); v = v+1}
{sleep( 15 ); print(v*10)}

Symbols Table: 
v = 1

Output: 
0

FileTable: 

Heap: 
-------
Program 2:
Execution Stack: 

Symbols Table: 
v = 1

Output: 
0

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
v = v+1
while(v<3){Fork({print(v); v = v+1}); v = v+1}
{sleep( 15 ); print(v*10)}

Symbols Table: 
v = 1

Output: 
0

FileTable: 

Heap: 
-------
Program 3:
Execution Stack: 
{print(v); v = v+1}

Symbols Table: 
v = 1

Output: 
0

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
while(v<3){Fork({print(v); v = v+1}); v = v+1}
{sleep( 15 ); print(v*10)}

Symbols Table: 
v = 2

Output: 
0

FileTable: 

Heap: 
-------
Program 3:
Execution Stack: 
print(v)
v = v+1

Symbols Table: 
v = 1

Output: 
0

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
{Fork({print(v); v = v+1}); v = v+1}
while(v<3){Fork({print(v); v = v+1}); v = v+1}
{sleep( 15 ); print(v*10)}

Symbols Table: 
v = 2

Output: 
0
1

FileTable: 

Heap: 
-------
Program 3:
Execution Stack: 
v = v+1

Symbols Table: 
v = 1

Output: 
0
1

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
Fork({print(v); v = v+1})
v = v+1
while(v<3){Fork({print(v); v = v+1}); v = v+1}
{sleep( 15 ); print(v*10)}

Symbols Table: 
v = 2

Output: 
0
1

FileTable: 

Heap: 
-------
Program 3:
Execution Stack: 

Symbols Table: 
v = 2

Output: 
0
1

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
v = v+1
while(v<3){Fork({print(v); v = v+1}); v = v+1}
{sleep( 15 ); print(v*10)}

Symbols Table: 
v = 2

Output: 
0
1

FileTable: 

Heap: 
-------
Program 4:
Execution Stack: 
{print(v); v = v+1}

Symbols Table: 
v = 2

Output: 
0
1

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
while(v<3){Fork({print(v); v = v+1}); v = v+1}
{sleep( 15 ); print(v*10)}

Symbols Table: 
v = 3

Output: 
0
1

FileTable: 

Heap: 
-------
Program 4:
Execution Stack: 
print(v)
v = v+1

Symbols Table: 
v = 2

Output: 
0
1

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
{sleep( 15 ); print(v*10)}

Symbols Table: 
v = 3

Output: 
0
1
2

FileTable: 

Heap: 
-------
Program 4:
Execution Stack: 
v = v+1

Symbols Table: 
v = 2

Output: 
0
1
2

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
sleep( 15 )
print(v*10)

Symbols Table: 
v = 3

Output: 
0
1
2

FileTable: 

Heap: 
-------
Program 4:
Execution Stack: 

Symbols Table: 
v = 3

Output: 
0
1
2

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
sleep( 14 )
print(v*10)

Symbols Table: 
v = 3

Output: 
0
1
2

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
sleep( 13 )
print(v*10)

Symbols Table: 
v = 3

Output: 
0
1
2

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
sleep( 12 )
print(v*10)

Symbols Table: 
v = 3

Output: 
0
1
2

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
sleep( 11 )
print(v*10)

Symbols Table: 
v = 3

Output: 
0
1
2

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
sleep( 10 )
print(v*10)

Symbols Table: 
v = 3

Output: 
0
1
2

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
sleep( 9 )
print(v*10)

Symbols Table: 
v = 3

Output: 
0
1
2

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
sleep( 8 )
print(v*10)

Symbols Table: 
v = 3

Output: 
0
1
2

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
sleep( 7 )
print(v*10)

Symbols Table: 
v = 3

Output: 
0
1
2

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
sleep( 6 )
print(v*10)

Symbols Table: 
v = 3

Output: 
0
1
2

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
sleep( 5 )
print(v*10)

Symbols Table: 
v = 3

Output: 
0
1
2

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
sleep( 4 )
print(v*10)

Symbols Table: 
v = 3

Output: 
0
1
2

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
sleep( 3 )
print(v*10)

Symbols Table: 
v = 3

Output: 
0
1
2

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
sleep( 2 )
print(v*10)

Symbols Table: 
v = 3

Output: 
0
1
2

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
sleep( 1 )
print(v*10)

Symbols Table: 
v = 3

Output: 
0
1
2

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
sleep( 0 )
print(v*10)

Symbols Table: 
v = 3

Output: 
0
1
2

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
print(v*10)

Symbols Table: 
v = 3

Output: 
0
1
2

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 

Symbols Table: 
v = 3

Output: 
0
1
2
30

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
v = 0
{while(v<3){Fork({print(v); v = v+1}); v = v+1}; {sleep( 15 ); print(v*10)}}

Symbols Table: 

Output: 

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
{while(v<3){Fork({print(v); v = v+1}); v = v+1}; {sleep( 15 ); print(v*10)}}

Symbols Table: 
v = 0

Output: 

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
while(v<3){Fork({print(v); v = v+1}); v = v+1}
{sleep( 15 ); print(v*10)}

Symbols Table: 
v = 0

Output: 

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
{Fork({print(v); v = v+1}); v = v+1}
while(v<3){Fork({print(v); v = v+1}); v = v+1}
{sleep( 15 ); print(v*10)}

Symbols Table: 
v = 0

Output: 

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
Fork({print(v); v = v+1})
v = v+1
while(v<3){Fork({print(v); v = v+1}); v = v+1}
{sleep( 15 ); print(v*10)}

Symbols Table: 
v = 0

Output: 

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
v = v+1
while(v<3){Fork({print(v); v = v+1}); v = v+1}
{sleep( 15 ); print(v*10)}

Symbols Table: 
v = 0

Output: 

FileTable: 

Heap: 
-------
Program 2:
Execution Stack: 
{print(v); v = v+1}

Symbols Table: 
v = 0

Output: 

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
while(v<3){Fork({print(v); v = v+1}); v = v+1}
{sleep( 15 ); print(v*10)}

Symbols Table: 
v = 1

Output: 

FileTable: 

Heap: 
-------
Program 2:
Execution Stack: 
print(v)
v = v+1

Symbols Table: 
v = 0

Output: 

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
{Fork({print(v); v = v+1}); v = v+1}
while(v<3){Fork({print(v); v = v+1}); v = v+1}
{sleep( 15 ); print(v*10)}

Symbols Table: 
v = 1

Output: 
0

FileTable: 

Heap: 
-------
Program 2:
Execution Stack: 
v = v+1

Symbols Table: 
v = 0

Output: 
0

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
Fork({print(v); v = v+1})
v = v+1
while(v<3){Fork({print(v); v = v+1}); v = v+1}
{sleep( 15 ); print(v*10)}

Symbols Table: 
v = 1

Output: 
0

FileTable: 

Heap: 
-------
Program 2:
Execution Stack: 

Symbols Table: 
v = 1

Output: 
0

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
v = v+1
while(v<3){Fork({print(v); v = v+1}); v = v+1}
{sleep( 15 ); print(v*10)}

Symbols Table: 
v = 1

Output: 
0

FileTable: 

Heap: 
-------
Program 3:
Execution Stack: 
{print(v); v = v+1}

Symbols Table: 
v = 1

Output: 
0

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
while(v<3){Fork({print(v); v = v+1}); v = v+1}
{sleep( 15 ); print(v*10)}

Symbols Table: 
v = 2

Output: 
0

FileTable: 

Heap: 
-------
Program 3:
Execution Stack: 
print(v)
v = v+1

Symbols Table: 
v = 1

Output: 
0

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
{Fork({print(v); v = v+1}); v = v+1}
while(v<3){Fork({print(v); v = v+1}); v = v+1}
{sleep( 15 ); print(v*10)}

Symbols Table: 
v = 2

Output: 
0
1

FileTable: 

Heap: 
-------
Program 3:
Execution Stack: 
v = v+1

Symbols Table: 
v = 1

Output: 
0
1

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
Fork({print(v); v = v+1})
v = v+1
while(v<3){Fork({print(v); v = v+1}); v = v+1}
{sleep( 15 ); print(v*10)}

Symbols Table: 
v = 2

Output: 
0
1

FileTable: 

Heap: 
-------
Program 3:
Execution Stack: 

Symbols Table: 
v = 2

Output: 
0
1

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
v = v+1
while(v<3){Fork({print(v); v = v+1}); v = v+1}
{sleep( 15 ); print(v*10)}

Symbols Table: 
v = 2

Output: 
0
1

FileTable: 

Heap: 
-------
Program 4:
Execution Stack: 
{print(v); v = v+1}

Symbols Table: 
v = 2

Output: 
0
1

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
while(v<3){Fork({print(v); v = v+1}); v = v+1}
{sleep( 15 ); print(v*10)}

Symbols Table: 
v = 3

Output: 
0
1

FileTable: 

Heap: 
-------
Program 4:
Execution Stack: 
print(v)
v = v+1

Symbols Table: 
v = 2

Output: 
0
1

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
{sleep( 15 ); print(v*10)}

Symbols Table: 
v = 3

Output: 
0
1
2

FileTable: 

Heap: 
-------
Program 4:
Execution Stack: 
v = v+1

Symbols Table: 
v = 2

Output: 
0
1
2

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
sleep( 15 )
print(v*10)

Symbols Table: 
v = 3

Output: 
0
1
2

FileTable: 

Heap: 
-------
Program 4:
Execution Stack: 

Symbols Table: 
v = 3

Output: 
0
1
2

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
sleep( 14 )
print(v*10)

Symbols Table: 
v = 3

Output: 
0
1
2

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
sleep( 13 )
print(v*10)

Symbols Table: 
v = 3

Output: 
0
1
2

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
sleep( 12 )
print(v*10)

Symbols Table: 
v = 3

Output: 
0
1
2

FileTable: 

Heap: 
-------
Program 1:
Execution Stack: 
sleep( 11 )
print(v*10)

Symbols Table: 
v = 3

Output: 
0
1
2

FileTable: 

Heap: 
-------
